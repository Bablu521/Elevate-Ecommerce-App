// Mocks generated by Mockito 5.4.6 from annotations
// in elevate_ecommerce_app/test/presentation/occasion/view_models/occasion_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:elevate_ecommerce_app/core/api_result/api_result.dart' as _i4;
import 'package:elevate_ecommerce_app/domin/entities/occasion_entity.dart'
    as _i5;
import 'package:elevate_ecommerce_app/domin/entities/product_entity.dart'
    as _i8;
import 'package:elevate_ecommerce_app/domin/use_cases/get_products_by_occasion_use_case.dart'
    as _i7;
import 'package:elevate_ecommerce_app/domin/use_cases/occasion_use_case.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [OccasionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockOccasionUseCase extends _i1.Mock implements _i2.OccasionUseCase {
  MockOccasionUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<List<_i5.OccasionEntity>>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue:
                _i3.Future<_i4.ApiResult<List<_i5.OccasionEntity>>>.value(
                  _i6.dummyValue<_i4.ApiResult<List<_i5.OccasionEntity>>>(
                    this,
                    Invocation.method(#call, []),
                  ),
                ),
          )
          as _i3.Future<_i4.ApiResult<List<_i5.OccasionEntity>>>);
}

/// A class which mocks [GetProductsByOccasionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProductsByOccasionUseCase extends _i1.Mock
    implements _i7.GetProductsByOccasionUseCase {
  MockGetProductsByOccasionUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<List<_i8.ProductEntity>>> call(String? occasionId) =>
      (super.noSuchMethod(
            Invocation.method(#call, [occasionId]),
            returnValue:
                _i3.Future<_i4.ApiResult<List<_i8.ProductEntity>>>.value(
                  _i6.dummyValue<_i4.ApiResult<List<_i8.ProductEntity>>>(
                    this,
                    Invocation.method(#call, [occasionId]),
                  ),
                ),
          )
          as _i3.Future<_i4.ApiResult<List<_i8.ProductEntity>>>);
}
